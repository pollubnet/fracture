@using System.Collections.ObjectModel
@using Fracture.Server.Components.UI
@using Fracture.Server.Modules.Database
@using Fracture.Server.Modules.Items.Models
@using Fracture.Server.Modules.Items.Services
@using Fracture.Server.Modules.Users
@inject IItemGenerator ItemGenerator
@inject IItemsRepository ItemsRepository
@inject ILogger<EquipmentPopup> Logger



<div class="eqContainer">
    <div class="buttonEquipBg">
        <button class="buttonEquip" @onclick="GenerateNewItem">Generate new item</button>
    </div>
    <div class="equipmentContent">
        <div>Inventory</div>
        <div class="eqColumn">

            @foreach (var item in Inventory.Where(x => !IsEquipped(x))) {
                <ItemCard Item="@item" OnEquipClicked="() => Equip(item)" IsEquipped="IsEquipped(item)"
                          OnUnequipClicked="() => Unequip(item)"></ItemCard>
            }
        </div>
        <div>Equipped</div>
        <div class="eqColumn">

            @foreach (var item in Equipment) {
                <ItemCard Item="@item" OnEquipClicked="() => Equip(item)" IsEquipped="IsEquipped(item)"
                          OnUnequipClicked="() => Unequip(item)"></ItemCard>
            }
        </div>

    </div>
</div>
