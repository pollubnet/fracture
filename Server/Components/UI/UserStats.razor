@using Fracture.Server.Modules.Items.Models
@using System.Collections.ObjectModel

<table>
    @foreach (var itemStat in Enum.GetValues<ItemStat>())
    {
        var stat = Equipment.Sum(x => x.Statistics.GetStatFromItemStat(itemStat));
        var color = "";
        @if (stat <= 0)
            color = "text-danger";

        var statImage = (StatImage[])Enum.GetValues(typeof(StatImage));
        string stringStatImage = statImage[x].ToString();
        stringStatImage = "assets/" + stringStatImage + ".svg";
        <tr><td><img src=@stringStatImage></td><td>@itemStat</td><td class="@color text-end">@stat</td></tr>
        x += 1;
    }
</table>

@code {
    
    [Parameter] public required ObservableCollection<Item> Equipment { get; set; }

    protected override void OnInitialized()
    {
        Equipment.CollectionChanged += (sender, e) => StateHasChanged();
    }

    int x = 0;
}
