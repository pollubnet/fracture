@using Fracture.Server.Modules.Items.Models
@using System.Collections.ObjectModel

<table>
    @foreach (var itemStat in Enum.GetValues<ItemStat>())
    {
        var stat = Equipment.Sum(x => x.Statistics.GetStatFromItemStat(itemStat));
        <tr><td><img src=@("assets/" + images[itemStat])></td><td>@itemStat</td><td>@stat</td></tr>
    }
</table>

@code {

    [Parameter] public required ObservableCollection<Item> Equipment { get; set; }

    protected override void OnInitialized()
    {
        Equipment.CollectionChanged += (sender, e) => StateHasChanged();
    }

    Dictionary<ItemStat, string> images = new()
    {
        { ItemStat.Power, "sword.svg" },
        { ItemStat.Armor, "shield.svg" },
        { ItemStat.Luck, "clover.svg" },
        { ItemStat.Health, "heart.svg" }
    };
}
