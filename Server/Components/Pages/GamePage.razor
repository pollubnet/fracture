@page "/game"
@rendermode InteractiveServer

@using Fracture.Server.Components.Layout
@using Fracture.Server.Components.Popups
@using Fracture.Server.Components.UI
@using Fracture.Server.Modules.Items.Models

@layout GameLayout

<div id="container">
	<div class="sidebar-container">
		<div class="stats-flex">
			<div @onclick="() => popup.ShowComponent<StatsPopup>()">STATYSTYKI</div>
			<UserStats Equipment="equipment"></UserStats>
		</div>
		<div class="equipment-flex">
			<div @onclick="() => popup.ShowComponent<EquipmentPopup>()">EKWIPUNEK</div>

			Siatka aktualnie założonych
			+ ostatnio zdobyte
		</div>
	</div>
	<div class="text-container">
		<PopupContainer @ref="popup"></PopupContainer>

		tutaj log mojej gry<br />
		tutaj log mojej gry<br />
	</div>
	<div class="sidebar-container">
		<div class="journal-flex">
			<div @onclick="() => popup.ShowComponent<JournalPopup>()">JOURNAL</div>
		</div>
		<div class="map-flex">
			<div @onclick="() => popup.ShowComponent<MapPopup>()">MINIMAPA</div>
		</div>
		<div class="button-container-flex">
			<div class="action-button">
				1
			</div>
			<div class="action-button">
				2
			</div>
			<div class="action-button">
				3
			</div>
			<div class="action-button" @onclick="() => popup.ShowComponent<SettingsPopup>()">
				4
			</div>
		</div>
	</div>
</div>


@code {
	private List<Item> equipment = new();
	private PopupContainer popup;

	protected override Task OnInitializedAsync()
	{
		return base.OnInitializedAsync();
	}
}
