@page "/game"
@rendermode InteractiveServer

@using Fracture.Server.Components.Layout
@using Fracture.Server.Components.Popups
@using Fracture.Server.Components.UI
@using Fracture.Server.Modules.Items.Models
@using System.Collections.ObjectModel

@layout GameLayout

<div id="container">
	<div class="leftPanel borderPanel">
		<div class="stats">
			<div class="info">
				<div class="info-content">
					<div @onclick="() => _popup.ShowComponent<StatsPopup>()"><img src="assets/info_button.svg"
					</div>
				</div>
			</div>
			<UserStats Equipment="_equipment"></UserStats>
		</div>
		<div class="equipment">
			<div class="info">
				<div class="info-content">
					<div @onclick="() => _popup.ShowComponent<EquipmentPopup>(_equipmentPopupParameters)"><img src="assets/info_button.svg"
					</div>
				</div>
			</div>
			<table class="equipmentTable">
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>

				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>

				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>

				</tr>

			</table>
		</div>

	</div>
	<div class="midPanel borderPanel">
		<div class="map">
		</div>
		<div class="eqManager">
		</div>
		<div class="statManager ">
		</div>
		<div class="dialogueWindowBg">
			<div class="dialogueWindow">
				<PopupContainer @ref="_popup"></PopupContainer>
				tutaj log mojej gry<br />
				tutaj log mojej gry<br />
			</div>
		</div>
		<div class="cristalBox">
			<div class="actionButton"><div class="actionButton-content"><img src="assets/sword_button.svg"></div></div>
			<div class="actionButton"><div class="actionButton-content"><img src="assets/shield_button.svg"</div></div>
			<div class="cristalCircle">
				<div class="crystal">
					<img src="assets/crystal.png" alt="">
				</div>
			</div>
			<div class="actionButton"><div class="actionButton-content"><img src="assets/some_button.svg"</div></div>
			<div class="actionButton"><div class="actionButton-content"><img src="assets/skip_button.svg"</div></div>
		</div>


	</div>
	<div class="rightPanel borderPanel">
		<div class="journal">
			<div class="info">
				<div class="info-content">
					<div @onclick="() => _popup.ShowComponent<JournalPopup>()"></div><img src="assets/info_button.svg"
				</div>
			</div>

			<div class="journalPage">
				<p>
					<span>Log1:<br></span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum numquam quaerat officiis placeat ipsa cupiditate nobis dolore perferendis, odit culpa perspiciatis, vero delectus ex omnis ad magni, deserunt quae? Ex.
				</p>
				<p>
					<span>Log2:<br></span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum numquam quaerat officiis placeat ipsa cupiditate nobis dolore perferendis, odit culpa perspiciatis, vero delectus ex omnis ad magni, deserunt quae? Ex.
				</p>
				<p>
					<span>Log3:<br></span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum numquam quaerat officiis placeat ipsa cupiditate nobis dolore perferendis, odit culpa perspiciatis, vero delectus ex omnis ad magni, deserunt quae? Ex.
				</p>
			</div>
		</div>
		<div class="miniMap">
			<div class="info">
				<div class="info-content">
					<div @onclick="() => _popup.ShowComponent<MapPopup>()"></div><img src="assets/info_button.svg"
				</div>
			</div>
			<table class="miniMapTable">
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
			</table>
		</div>
		<div class="settings">
			<div class="settingsBtn">
				<div class="settingsBtn-content">
					<img src="assets/exit_button.svg"
				</div>
			</div>
			<div class="settingsBtn">
				<div class="settingsBtn-content">
					<img src="assets/some_button2.svg"
				</div>
			</div>
			<div class="settingsBtn">
				<div class="settingsBtn-content">
					<img src="assets/exit_button.svg"
				</div>
			</div>

		</div>
	</div>
</div>


@code {
	private readonly ObservableCollection<Item> _equipment = new();
	private readonly ObservableCollection<Item> _inventory = new();

	private Dictionary<string, object> _equipmentPopupParameters = null!;

    private PopupContainer _popup = null!;

	protected override Task OnInitializedAsync()
	{
	    _equipmentPopupParameters = new()
	    {
	        {"inventory", _inventory},
	        {"equipment", _equipment}
	    };
	    return base.OnInitializedAsync();
	}
}
