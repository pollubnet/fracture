@page "/"
@page "/home"
@using Fracture.Server.Components.Layout
@using Fracture.Server.Modules.Database
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@rendermode InteractiveServer

@layout HomeLayout
@inject IUsersRepository UsersRepository
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore

<link rel="icon" type="image/png" href="assets/icons/favicon.png"/>

<div id="container">

    <div class="title">
        <img class="titleImg" src="assets/background/title.svg"/>
    </div>
    <div class="crystalCircle">
        <div class="crystal">
            <img src="assets/icons/crystal.png" alt="">
        </div>
    </div>
    <div class="login-box">
        <div class="login">

            <div class="data-box">
                <input type="text" @bind="_username" onkeyup="@Enter" required="required"/>
                <label>Login</label>
            </div>
            <div class="data-box">
                <input type="password" @bind="_username" onkeyup="@Enter" required="required"/>
                <label>password</label>
            </div>
            <div class="data-box">
                <div @onclick="HandleUserLogin" class="logButton">
                    <div class="logButton-content">Sign in</div>
                </div>
            </div>

        </div>
    </div>


</div>



<script>

</script>


@code {

    private async Task Enter(KeyboardEventArgs e) {
        if (e.Code == "Enter" || e.Code == "NumpadEnter") {
            await HandleUserLogin();
        }
    }

    private string _username = string.Empty;

    private async Task HandleUserLogin() {
        if (_username != string.Empty) {
            await ProtectedSessionStore.SetAsync("username", _username);
            NavigationManager.NavigateTo("/game");
        }
    }

}

